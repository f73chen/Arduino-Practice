library(robustbase)
head(Animals2, n=5)
summary(Animals2)
# Scatterplot doesn't show much due to highly skewed dataset
plot(Animals2, pch=16, col=adjustcolor("black", alpha.f=0.3),
xlab="Body Weight (kg)", ylab="Brain Weight (g)", main="Brain vs. Body Weight")
# Since scatterplot is on the bottom-left quadrant, should power transform (-, -)
# Decrease both alpha_x and alpha_y
powerfun <- function(x, alpha) {
if (sum(x <= 0) > 1)
stop("x must be positive")
if (alpha == 0)
log(x)
else if (alpha > 0) {
x ^ alpha
else
-x^alpha
}
}
par(mfrow=c(3, 3), mar=2.5*c(1, 1, 1, 0.1))
a = rep(c(0, 1/2, 1), each=3)
a = rep(c(0, 1/2, 1), times=3)
for (i in 1:9) {
plot(powerfun(Animals2$body, a[i]), powerfun(Animals2$brain, b[i]),
pch=19, cex=0.5, col=adjustcolor("black", alpha=0.3),
xlab="", ylab="", main=bquote(alpha[x] == .(a[i]) ~ ", " ~ alpha[y] == .(b[i])))
}
# Appears to have a linear relationship on the log scale
# Except 3 outliers that might have large influence
plot(log(Animals2$body), log(Animals2$brain), pch=16, col=adjustcolor("black", alpha.f=0.3),
main="Brain vs. Body Weight (log)", xlab="log(Body Weight)", ylab="log(Brain Weight)")
# Calculate the regression line for the log transform
abline(lm(log(brain) ~ log(body), Animals2), col="red")
# Calculate residuals
mod = lm(log(brain) ~ log(body), Animals2)
plot(residuals(mod), pch=19, col=adjustcolor("black", alpha=0.3),
ylab="Residuals", xlab="Index")
help(sapply)
help(apply)
help(sapply)
for (i in 1:9) {
hist(powerfun(x + 1, a[i]),
col=adjustcolor("grey", alpha=0.5),
main=bquote(alpha == .(a[i])), xlab="", breaks=50)
}
powerfun <- function(x, alpha) {
if (sum(x <= 0) > 0) stop("x must be positive")
if (alpha == 0) { log(x) }
else if (alpha > 0) { x^alpha }
else { -x ^ alpha }
}
# Apply power function to the number of farms in 1987
filename <- paste("../source/repos/Uni-Projects/STAT 341/Data", "agpop_data.csv", sep="/")
agpop <- read.csv(filename, header=TRUE)
agpop[agpop == -99] = NA
x = agpop$farms87
par(mfrow=c(3, 3))
a = seq(-1/2, 1.5, length.out=9)
for (i in 1:9) {
hist(powerfun(x + 1, a[i]),
col=adjustcolor("grey", alpha=0.5),
main=bquote(alpha == .(a[i])), xlab="", breaks=50)
}
powerfun <- function(x, alpha) {
if (sum(x <= 0) > 0) stop("x must be positive")
if (alpha == 0) { log(x) }
else if (alpha > 0) { x^alpha }
else { -x ^ alpha }
}
# Apply power function to the number of farms in 1987
filename <- paste("../source/repos/Uni-Projects/STAT 341/Data", "agpop_data.csv", sep="/")
agpop <- read.csv(filename, header=TRUE)
agpop[agpop == -99] = NA
x = agpop$farms87
par(mfrow=c(3, 3))
a = seq(-1/2, 1.5, length.out=9)
for (i in 1:9) {
hist(powerfun(x + 1, a[i]),
col=adjustcolor("grey", alpha=0.5),
main=bquote(alpha == .(a[i])), xlab="", breaks=50)
}
# Apply power transformations on scatterplots
par(mfrow=c(3, 3), mar=2.5*c(1, 1, 1, 0.1))
a = rep(c(0, 1/4, 1/2), each=3)
b = rep(c(0, 1/4, 1/2), times=3)
subdata = na.omit(agpop[, c('farms87', 'acres87')])
fa = subdata$farms87
ac = subdata$acres87
for (i in 1:9) {
plot(powerfun(fa+1, a[i]), powerfun(ac+1, b[i]),
pch=19, cex=0.5, col=adjustcolor("black", alpha=0.3),
xlab="", ylab="", main = bquote(alpha[x] == .(a[i]) ~ "," ~  alpha[y] == .(b[i])))
}
powerfun <- function(x, alpha) {
if (sum(x <= 0) > 0) stop("x must be positive")
if (alpha == 0) { log(x) }
else if (alpha > 0) { x^alpha }
else { -x ^ alpha }
}
# Apply power function to the number of farms in 1987
filename <- paste("../source/repos/Uni-Projects/STAT 341/Data", "agpop_data.csv", sep="/")
agpop <- read.csv(filename, header=TRUE)
agpop[agpop == -99] = NA
x = agpop$farms87
par(mfrow=c(3, 3))
a = seq(-1/2, 1.5, length.out=9)
for (i in 1:9) {
hist(powerfun(x + 1, a[i]),
col=adjustcolor("grey", alpha=0.5),
main=bquote(alpha == .(a[i])), xlab="", breaks=50)
}
# Apply power transformations on scatterplots
par(mfrow=c(3, 3), mar=2.5*c(1, 1, 1, 0.1))
a = rep(c(0, 1/4, 1/2), each=3)
b = rep(c(0, 1/4, 1/2), times=3)
subdata = na.omit(agpop[, c('farms87', 'acres87')])
fa = subdata$farms87
ac = subdata$acres87
for (i in 1:9) {
plot(powerfun(fa+1, a[i]), powerfun(ac+1, b[i]),
pch=19, cex=0.5, col=adjustcolor("black", alpha=0.3),
xlab="", ylab="", main = bquote(alpha[x] == .(a[i]) ~ "," ~  alpha[y] == .(b[i])))
}
powerfun <- function(x, alpha) {
if (sum(x <= 0) > 0) stop("x must be positive")
if (alpha == 0) { log(x) }
else if (alpha > 0) { x^alpha }
else { -x ^ alpha }
}
filename <- paste("../source/repos/Uni-Projects/STAT 341/Data", "agpop_data.csv", sep="/")
agpop <- read.csv(filename, header=TRUE)
filename <- paste("../source/repos/Uni-Projects/STAT 341/Data", "agpop_data.csv", sep="/")
agpop <- read.csv(filename, header=TRUE)
filename <- paste("../Data", "agpop_data.csv", sep="/")
agpop <- read.csv(filename, header=TRUE)
par(mfrow=c(3, 3))
a = seq(-1/2, 1.5, length.out=9)
for (i in 1:9) {
hist(powerfun(x + 1, a[i]),
col=adjustcolor("grey", alpha=0.5),
main=bquote(alpha == .(a[i])), xlab="", breaks=50)
}
powerfun <- function(x, alpha) {
if (sum(x <= 0) > 0) stop("x must be positive")
if (alpha == 0) { log(x) }
else if (alpha > 0) { x^alpha }
else { -x ^ alpha }
}
# Apply power function to the number of farms in 1987
# /source/repos/Uni-Projects/STAT 341
filename <- paste("../Data", "agpop_data.csv", sep="/")
agpop <- read.csv(filename, header=TRUE)
agpop[agpop == -99] = NA
x = agpop$farms87
par(mfrow=c(3, 3))
a = seq(-1/2, 1.5, length.out=9)
for (i in 1:9) {
hist(powerfun(x + 1, a[i]),
col=adjustcolor("grey", alpha=0.5),
main=bquote(alpha == .(a[i])), xlab="", breaks=50)
}
powerfun <- function(x, alpha) {
if (sum(x <= 0) > 0) stop("x must be positive")
if (alpha == 0) { log(x) }
else if (alpha > 0) { x^alpha }
else { -x ^ alpha }
}
# Apply power function to the number of farms in 1987
# /source/repos/Uni-Projects/STAT 341
filename <- paste("../Data", "agpop_data.csv", sep="/")
agpop <- read.csv(filename, header=TRUE)
agpop[agpop == -99] = NA
x = agpop$farms87
par(mfrow=c(3, 3))
a = seq(-1/2, 1.5, length.out=9)
for (i in 1:9) {
hist(powerfun(x + 1, a[i]),
col=adjustcolor("grey", alpha=0.5),
main=bquote(alpha == .(a[i])), xlab="", breaks=50)
}
powerfun <- function(x, alpha) {
if (sum(x <= 0) > 0) stop("x must be positive")
if (alpha == 0) { log(x) }
else if (alpha > 0) { x^alpha }
else { -x ^ alpha }
}
# Apply power function to the number of farms in 1987
# /source/repos/Uni-Projects/STAT 341
filename <- paste("../Data", "agpop_data.csv", sep="/")
agpop <- read.csv(filename, header=TRUE)
agpop[agpop == -99] = NA
x = agpop$farms87
par(mfrow=c(3, 3))
a = seq(-1/2, 1.5, length.out=9)
for (i in 1:9) {
hist(powerfun(x + 1, a[i]),
col=adjustcolor("grey", alpha=0.5),
main=bquote(alpha == .(a[i])), xlab="", breaks=50)
}
par(mfrow=c(3, 3), mar=2.5*c(1, 1, 1, 0.1))
a = rep(c(0, 1/4, 1/2), each=3)
b = rep(c(0, 1/4, 1/2), times=3)
subdata = na.omit(agpop[, c('farms87', 'acres87')])
fa = subdata$farms87
ac = subdata$acres87
for (i in 1:9) {
plot(powerfun(fa+1, a[i]), powerfun(ac+1, b[i]),
pch=19, cex=0.5, col=adjustcolor("black", alpha=0.3),
xlab="", ylab="", main = bquote(alpha[x] == .(a[i]) ~ "," ~  alpha[y] == .(b[i])))
}
