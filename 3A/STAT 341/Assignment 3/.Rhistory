}
ozone <- read.csv("OzoneData.csv", header=TRUE)
names(ozone)  <- c("x", "y")
par(mfrow = c(3, 2), mar = 2.5 * c(1, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
muhat <- getmuhat(ozone, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.3))
curve(muhat, add = TRUE, lwd = 2, col = deg)
}
for (deg in degrees) {
muhat <- getmuhat(ozone, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = deg)
legend(0, 30, legend=paste("Degree ", deg), col = deg)
}
ozone <- read.csv("OzoneData.csv", header=TRUE)
names(ozone)  <- c("x", "y")
par(mfrow = c(3, 2), mar = 2.5 * c(1, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
muhat <- getmuhat(ozone, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = deg)
legend(0, 30, legend=paste("Degree ", deg), col = deg)
}
par(mfrow = c(3, 2), mar = 2.5 * c(1, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
muhat <- getmuhat(ozone, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = deg)
legend(-10, 40, legend=paste("Degree ", deg), col = deg, cex=0.5)
}
par(mfrow = c(3, 2), mar = 2.5 * c(1, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
muhat <- getmuhat(ozone, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = deg)
legend(-10, 40, legend=paste("Degree ", deg), col = deg, cex=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(1, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
muhat <- getmuhat(ozone, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = deg)
legend(-10, 40, legend=paste("Degree ", deg), col = deg, cex=0.8)
}
par(mfrow = c(3, 2), mar = 2.5 * c(1, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
muhat <- getmuhat(ozone, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = deg)
legend(-10, 40, legend=paste("Degree ", deg), col = deg, cex=0.85, lty=2)
}
par(mfrow = c(3, 2), mar = 2.5 * c(1, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
muhat <- getmuhat(ozone, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = deg+1)
legend(-10, 40, legend=paste("Degree ", deg), col = deg+1, cex=0.85, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.5, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
muhat <- getmuhat(ozone, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = deg+1)
legend(-10, 40, legend=paste("Degree ", deg), col = deg+1, cex=0.85, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(1, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
muhat <- getmuhat(ozone, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = deg+1)
legend(-10, 40, legend=paste("Degree ", deg), col = deg+1, cex=0.85, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.75, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
muhat <- getmuhat(ozone, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = deg+1)
legend(-10, 40, legend=paste("Degree ", deg), col = deg+1, cex=0.85, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.85, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
muhat <- getmuhat(ozone, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = deg+1)
legend(-10, 40, legend=paste("Degree ", deg), col = deg+1, cex=0.85, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.65, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
muhat <- getmuhat(ozone, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = deg+1)
legend(-10, 40, legend=paste("Degree ", deg), col = deg+1, cex=0.85, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.7, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
muhat <- getmuhat(ozone, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = deg+1)
legend(-10, 40, legend=paste("Degree ", deg), col = deg+1, cex=0.85, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.75, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
muhat <- getmuhat(ozone, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = deg+1)
legend(-10, 40, legend=paste("Degree ", deg), col = deg+1, cex=0.85, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.75, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
muhat <- getmuhat(ozone, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = deg+1)
legend(-10, 40, legend=paste("Degree ", deg), col = deg+1, cex=0.8, lty=1)
}
getSampleComp <- function(pop, size, replace=FALSE) {
N <- popSize(pop)
samp <- rep(FALSE, N)
samp[sample(1:N, size, replace = replace)] <- TRUE
samp
}
M <- 50
n <- 100
set.seed(341)
samples <- lapply(1:M, FUN = function(i) {getSampleComp(ozone, n)})
Ssam <- lapply(samples, FUN = function(Si) {getXYSample(xnam, ynam, Si, pop)})
M <- 50
n <- 100
set.seed(341)
samples <- lapply(1:M, FUN = function(i) {getSampleComp(ozone, n)})
Ssam <- lapply(samples, FUN = function(Si) {getXYSample(xnam, ynam, Si, ozone)})
M <- 50
n <- 100
set.seed(341)
samples <- lapply(1:M, FUN = function(i) {getSampleComp(ozone, n)})
Ssam <- lapply(samples, FUN = function(Si) {ozone[Si]})
Ssam <- lapply(samples, FUN = function(Si) {ozone[Si,]})
Tsam <- lapply(samples, FUN = function(Si) {ozone[!Si,]})
Tsam
length(Ssam[[1]])
length(Ssam[1])
Tsam <- lapply(samples, FUN = function(Si) {ozone[!Si,]})
M <- 50
n <- 100
set.seed(341)
samples <- lapply(1:M, FUN = function(i) {getSampleComp(ozone, n)})
Ssam <- lapply(samples, FUN = function(Si) {ozone[Si,]})
Tsam <- lapply(samples, FUN = function(Si) {ozone[!Si,]})
par(mfrow = c(3, 2), mar = 2.5 * c(0.75, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
fits <- lapply(Ssam, FUN=getmuhat, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
for (fit in fits) {
curve(fit, add = TRUE, lwd = 2, col = deg+1)
}
legend(-10, 40, legend=paste("Degree ", deg), col = deg+1, cex=0.8, lty=1)
}
curve(fit, add = TRUE, lwd = 2, col = deg+2)
par(mfrow = c(3, 2), mar = 2.5 * c(0.75, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
fits <- lapply(Ssam, FUN=getmuhat, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
for (fit in fits) {
curve(fit, add = TRUE, lwd = 2, col = deg+2)
}
legend(-10, 40, legend=paste("Degree ", deg), col = deg+1, cex=0.8, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.75, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
fits <- lapply(Ssam, FUN=getmuhat, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
for (fit in fits) {
curve(fit, add = TRUE, lwd = 2, col = deg+2)
}
legend(-10, 40, legend=paste("Degree ", deg), col = deg+3, cex=0.8, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.75, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
fits <- lapply(Ssam, FUN=getmuhat, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
for (fit in fits) {
curve(fit, add = TRUE, lwd = 2, col = deg+2)
}
legend(-10, 40, legend=paste("Degree ", deg), col = deg+1, cex=0.8, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.75, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
fits <- lapply(Ssam, FUN=getmuhat, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
for (fit in fits) {
curve(fit, add = TRUE, lwd = 2, col = deg)
}
legend(-10, 40, legend=paste("Degree ", deg), col = deg+1, cex=0.8, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.75, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
fits <- lapply(Ssam, FUN=getmuhat, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
for (fit in fits) {
curve(fit, add = TRUE, lwd = 2, col = (deg+1)/2)
}
legend(-10, 40, legend=paste("Degree ", deg), col = deg+1, cex=0.8, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.75, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
fits <- lapply(Ssam, FUN=getmuhat, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
for (fit in fits) {
curve(fit, add = TRUE, lwd = 2, col = deg/2+1)
}
legend(-10, 40, legend=paste("Degree ", deg), col = deg+1, cex=0.8, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.75, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
for (deg in degrees) {
fits <- lapply(Ssam, FUN=getmuhat, complexity = deg)
plot(y ~ x, data = ozone, main = paste("Degree ", deg), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
for (fit in fits) {
curve(fit, add = TRUE, lwd = 2, col = (deg+1)/2+1)
}
legend(-10, 40, legend=paste("Degree ", deg), col = deg+1, cex=0.8, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.75, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
colours <- c(2, 3, 4, 5, 6, 7)
for (i in 1:6) {
fits <- lapply(Ssam, FUN=getmuhat, complexity = degrees[i])
plot(y ~ x, data = ozone, main = paste("Degree ", degrees[i]), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
for (fit in fits) {
curve(fit, add = TRUE, lwd = 2, col = colours[i])
}
legend(-10, 40, legend=paste("Degree ", deg), col = colours[i], cex=0.8, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.75, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
colours <- c(2, 3, 4, 5, 6, 7)
for (i in 1:7) {
muhat <- getmuhat(ozone, complexity = degrees[i])
plot(y ~ x, data = ozone, main = paste("Degree ", degrees[i]), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = colours[i])
legend(-10, 40, legend=paste("Degree ", deg), col = colours[i], cex=0.8, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.75, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
colours <- c(2, 3, 4, 5, 6, 7)
for (i in 1:7) {
print(degrees[i])
muhat <- getmuhat(ozone, complexity = degrees[i])
plot(y ~ x, data = ozone, main = paste("Degree ", degrees[i]), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = colours[i])
legend(-10, 40, legend=paste("Degree ", degrees[i]), col = colours[i], cex=0.8, lty=1)
}
par(mfrow = c(3, 2), mar = 2.5 * c(0.75, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
colours <- c(2, 3, 4, 5, 6, 7)
for (i in 1:6) {
print(degrees[i])
muhat <- getmuhat(ozone, complexity = degrees[i])
plot(y ~ x, data = ozone, main = paste("Degree ", degrees[i]), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = colours[i])
legend(-10, 40, legend=paste("Degree ", degrees[i]), col = colours[i], cex=0.8, lty=1)
}
samples <- lapply(1:M, FUN = function(i) {getSampleComp(ozone, n)})
length(ozone)
popSize <- function(pop) {nrow(as.data.frame(pop))}
getSampleComp <- function(pop, size, replace=FALSE) {
N <- popSize(pop)
samp <- rep(FALSE, N)
samp[sample(1:N, size, replace = replace)] <- TRUE
samp
}
M <- 50
n <- 100
set.seed(341)
samples <- lapply(1:M, FUN = function(i) {getSampleComp(ozone, n)})
Ssam <- lapply(samples, FUN = function(Si) {ozone[Si,]})
Tsam <- lapply(samples, FUN = function(Si) {ozone[!Si,]})
par(mfrow = c(3, 2), mar = 2.5 * c(0.75, 1, 1, 0.1))
degrees <- c(1, 2, 5, 10, 15, 20)
colours <- c(2, 3, 4, 5, 6, 7)
for (i in 1:6) {
fits <- lapply(Ssam, FUN=getmuhat, complexity = degrees[i])
plot(y ~ x, data = ozone, main = paste("Degree ", degrees[i]), pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
for (fit in fits) {
curve(fit, add = TRUE, lwd = 2, col = colours[i])
}
legend(-10, 40, legend=paste("Degree ", degrees[i]), col = colours[i], cex=0.8, lty=1)
}
getmuFun <- function(pop) {
pop = na.omit(pop)
tauFun = approxfun(pop$x, pop$y, rule = 2, ties = mean)
tauFun
}
apse_all <- function(Ssamples, Tsamples, complexity, tau) {
N_S <- length(Ssamples)
muhats <- lapply(Ssamples, FUN = function(sample) getmuhat(sample, complexity))
mubar <- getmubar(muhats)
rowMeans(sapply(1:N_S, FUN = function(j) {
T_j <- Tsamples[[j]]
S_j <- Ssamples[[j]]
muhat <- muhats[[j]]
T_j <- na.omit(T_j)
y <- c(S_j$y, T_j$y)
x <- c(S_j$x, T_j$x)
tau_x <- tau(x)
muhat_x <- muhat(x)
mubar_x <- mubar(x)
apse <- (y - muhat_x)
bias2 <- (mubar_x - tau_x)
var_mutilde <- (muhat_x - mubar_x)
var_y <- (y - tau_x)
squares <- rbind(apse, var_mutilde, bias2, var_y)^2
rowMeans(squares)
}))
}
degrees <- 0:15
tauFun = getmuFun(pop)
getmuFun <- function(pop) {
pop = na.omit(pop)
tauFun = approxfun(pop$x, pop$y, rule = 2, ties = mean)
tauFun
}
apse_all <- function(Ssamples, Tsamples, complexity, tau) {
N_S <- length(Ssamples)
muhats <- lapply(Ssamples, FUN = function(sample) getmuhat(sample, complexity))
mubar <- getmubar(muhats)
rowMeans(sapply(1:N_S, FUN = function(j) {
T_j <- Tsamples[[j]]
S_j <- Ssamples[[j]]
muhat <- muhats[[j]]
T_j <- na.omit(T_j)
y <- c(S_j$y, T_j$y)
x <- c(S_j$x, T_j$x)
tau_x <- tau(x)
muhat_x <- muhat(x)
mubar_x <- mubar(x)
apse <- (y - muhat_x)
bias2 <- (mubar_x - tau_x)
var_mutilde <- (muhat_x - mubar_x)
var_y <- (y - tau_x)
squares <- rbind(apse, var_mutilde, bias2, var_y)^2
rowMeans(squares)
}))
}
degrees <- 0:15
tauFun = getmuFun(ozone)
apse_vals <- sapply(degrees, FUN = function(deg) {
apse_all(Ssam, Tsam, complexity = deg, tau = tauFun)
})
colnames(apse_vals) = paste("deg=", degrees, sep = "")
round(apse_vals, 3)
library(knitr)
kable(round(apse_vals, 3))
round(apse_vals, 3)
install.packages("kableExtra")
kable(round(apse_vals, 3), align="cc") %>%
kable_styling(font_size=7)
library(kableExtra)
kable(round(apse_vals, 3), align="cc") %>%
kable_styling(font_size=7)
kable(round(apse_vals, 3), align="cc") %>%
kable_styling(font_size=10)
kable(round(apse_vals, 3))
colnames(apse_vals) = paste("deg", degrees, sep = " ")
kable(round(apse_vals, 3))
kable(round(apse_vals, 3), "pipe")
kable(round(apse_vals[:10], 3))
kable(round(apse_vals[,:10], 3))
kable(round(apse_vals[:10,], 3))
kable(round(apse_vals[1:10,], 3))
kable(round(apse_vals[,1:5], 3))
kable(round(apse_vals[,8:15], 3))
kable(round(apse_vals[,0:7], 3))
kable(round(apse_vals[,0:8], 3))
kable(round(apse_vals[,8:16], 3))
plot(degrees, sqrt(apse_vals[3,]), xlab = "Degree", ylab = "", type = "l",
ylim = c(0, 0.026), col = "firebrick", lwd = 2)
lines(degrees, sqrt(apse_vals[2,]), xlab = "Degree", ylab = "",
col = "steelblue", lwd = 2)
lines(degrees, sqrt(apse_vals[1,]), col = "purple", lwd = 2)
lines(degrees, sqrt(apse_vals[4,]), col = "black", lwd = 2)
plot(degrees, sqrt(apse_vals[3,]), xlab = "Degree", ylab = "", type = "l", col = 3, lwd = 2)
lines(degrees, sqrt(apse_vals[2,]), col = 2, lwd = 2)
lines(degrees, sqrt(apse_vals[1,]), col = 1, lwd = 2)
lines(degrees, sqrt(apse_vals[4,]), col = 4, lwd = 2)
plot(degrees, sqrt(apse_vals[3,]), xlab = "Degree", ylab = "", type = "l",
ylim = c(0, 20), col = 3, lwd = 2)
lines(degrees, sqrt(apse_vals[2,]), col = 2, lwd = 2)
lines(degrees, sqrt(apse_vals[1,]), col = 1, lwd = 2)
lines(degrees, sqrt(apse_vals[4,]), col = 4, lwd = 2)
plot(degrees, sqrt(apse_vals[3,]), xlab = "Degree", ylab = "", type = "l",
ylim = c(0, 3), col = 3, lwd = 2)
lines(degrees, sqrt(apse_vals[2,]), col = 2, lwd = 2)
lines(degrees, sqrt(apse_vals[1,]), col = 1, lwd = 2)
lines(degrees, sqrt(apse_vals[4,]), col = 4, lwd = 2)
plot(degrees, sqrt(apse_vals[3,]), xlab = "Degree", ylab = "", type = "l",
ylim = c(0, 13), col = 3, lwd = 2)
lines(degrees, sqrt(apse_vals[2,]), col = 2, lwd = 2)
lines(degrees, sqrt(apse_vals[1,]), col = 1, lwd = 2)
lines(degrees, sqrt(apse_vals[4,]), col = 4, lwd = 2)
plot(degrees, sqrt(apse_vals[3,]), main="Errors for Fits", xlab = "Degree",
ylab = "", type = "l", ylim = c(0, 13), col = 3, lwd = 2)
lines(degrees, sqrt(apse_vals[2,]), col = 2, lwd = 2)
lines(degrees, sqrt(apse_vals[1,]), col = 1, lwd = 2)
lines(degrees, sqrt(apse_vals[4,]), col = 4, lwd = 2)
plot(degrees, sqrt(apse_vals[3,]), main="Errors for Line Fits", xlab = "Degree",
ylab = "sqrt(Error)", type = "l", ylim = c(0, 13), col = 3, lwd = 2)
lines(degrees, sqrt(apse_vals[2,]), col = 2, lwd = 2)
lines(degrees, sqrt(apse_vals[1,]), col = 1, lwd = 2)
lines(degrees, sqrt(apse_vals[4,]), col = 4, lwd = 2)
legend()
plot(degrees, sqrt(apse_vals[3,]), main="Errors for Line Fits", xlab = "Degree",
ylab = "sqrt(Error)", type = "l", ylim = c(0, 13), col = 3, lwd = 2)
lines(degrees, sqrt(apse_vals[2,]), col = 2, lwd = 2)
lines(degrees, sqrt(apse_vals[1,]), col = 1, lwd = 2)
lines(degrees, sqrt(apse_vals[4,]), col = 4, lwd = 2)
legend()
kable(round(apse_vals[,13:16], 3), "pipe")
plot(degrees, sqrt(apse_vals[3,]), main="Errors for Line Fits", xlab = "Degree",
ylab = "sqrt(Error)", type = "l", ylim = c(0, 13), col = 3, lwd = 2)
lines(degrees, sqrt(apse_vals[2,]), col = 2, lwd = 2)
lines(degrees, sqrt(apse_vals[1,]), col = 1, lwd = 2)
lines(degrees, sqrt(apse_vals[4,]), col = 4, lwd = 2)
legend(10, 13, legend=c("APSE", "Var_Mu-tilde", "Bias^2", "Var_Y"), col = 1:4,
cex=0.8, lty=1)
plot(degrees, sqrt(apse_vals[3,]), main="Errors for Line Fits", xlab = "Degree",
ylab = "sqrt(Error)", type = "l", ylim = c(0, 13), col = 3, lwd = 2)
lines(degrees, sqrt(apse_vals[2,]), col = 2, lwd = 2)
lines(degrees, sqrt(apse_vals[1,]), col = 1, lwd = 2)
lines(degrees, sqrt(apse_vals[4,]), col = 4, lwd = 2)
legend(10, 13, legend=c("APSE", "Var_Mu-tilde", "Bias^2", "Var_Y"), col = 1:4,
cex=1, lty=1)
plot(degrees, sqrt(apse_vals[3,]), main="Errors for Line Fits", xlab = "Degree",
ylab = "sqrt(Error)", type = "l", ylim = c(0, 13), col = 3, lwd = 2)
lines(degrees, sqrt(apse_vals[2,]), col = 2, lwd = 2)
lines(degrees, sqrt(apse_vals[1,]), col = 1, lwd = 2)
lines(degrees, sqrt(apse_vals[4,]), col = 4, lwd = 2)
legend(10, 13, legend=c("APSE", "Var_Mu-tilde", "Bias^2", "Var_Y"), col = 1:4,
cex=0.5, lty=1)
kable(round(apse_vals[,0:6], 3), "pipe")
kable(round(apse_vals[,7:12], 3), "pipe")
kable(round(apse_vals[,13:16], 3), "pipe")
muhat <- getmuhat(ozone, complexity = 9)
plot(y ~ x, data = ozone, main = "Degree 9", pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = 4)
legend(-10, 40, legend = "Degree 9", col = 4, cex = 0.8, lty = 1)
muhat <- getmuhat(ozone, complexity = 9)
plot(y ~ x, data = ozone, main = "Degree 9", pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = 2)
legend(-10, 40, legend = "Degree 9", col = 4, cex = 0.8, lty = 1)
muhat <- getmuhat(ozone, complexity = 9)
plot(y ~ x, data = ozone, main = "Degree 9", pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = 2)
legend(-10, 40, legend = "Degree 9", col = 2, cex = 0.8, lty = 1)
muhat <- getmuhat(ozone, complexity = 9)
plot(y ~ x, data = ozone, main = "Degree 9", pch = 19,
xlab = "Day", ylab = "Ozone Level", col = adjustcolor("black", 0.4))
curve(muhat, add = TRUE, lwd = 2, col = 2)
