set.seed(341)
pop <- rt(1000, 10)
sc <- function(y.pop, y, attr, ...) {
N <- length(y.pop) + 1
# For every value in the vector y, run this function
sapply(y, function(y.new) {
N * (attr(c(y.new, y.pop), ...) - attr(y.pop, ...))
})
}
plot(y, sc(ys, y, mean), type="l", lwd=2,
main="Sensitivity curve for the Mean",
ylab="sensitivity")
set.seed(341)
pop <- rt(1000, 10)
y <- seq(-5, 5, length.out=1001)
sc <- function(y.pop, y, attr, ...) {
N <- length(y.pop) + 1
# For every value in the vector y, run this function
sapply(y, function(y.new) {
N * (attr(c(y.new, y.pop), ...) - attr(y.pop, ...))
})
}
plot(y, sc(pop, y, mean), type="l", lwd=2,
main="Sensitivity curve for the Mean",
ylab="sensitivity")
set.seed(341)
pop <- rt(1000, 10)
y <- seq(-10, 10, length.out=1001)
sc <- function(y.pop, y, attr, ...) {
N <- length(y.pop) + 1
# For every value in the vector y, run this function
sapply(y, function(y.new) {
N * (attr(c(y.new, y.pop), ...) - attr(y.pop, ...))
})
}
sdn <- function(y.pop) {
N = length(y.pop)
sqrt( var(y.pop) * (N-1) / N )
}
excess.kurtosis <- function(y.pop) {
N = length(y.pop)
y.bar = mean(y.pop)
sigma = sdn(y.pop)
(1/N)*(sum((y.pop-y.bar)^4)) / (sigma^4) - 3
}
plot(y, sc(pop, y, excess.kurtosis), type="l", lwd=2,
main="Sensitivity curve for Excess Kurtosis",
ylab="sensitivity")
set.seed(341)
pop <- rt(1000, 10)
y <- seq(-10, 10, length.out=1001)
sc <- function(y.pop, y, attr, ...) {
N <- length(y.pop) + 1
# For every value in the vector y, run this function
sapply(y, function(y.new) {
N * (attr(c(y.new, y.pop), ...) - attr(y.pop, ...))
})
}
sdn <- function(y.pop) {
N = length(y.pop)
sqrt( var(y.pop) * (N-1) / N )
}
excess.kurtosis <- function(y.pop) {
N = length(y.pop)
y.bar = mean(y.pop)
sigma = sdn(y.pop)
(1/N)*(sum((y.pop-y.bar)^4)) / (sigma^4) - 3
}
plot(y, sc(pop, y, kurtosis), type="l", lwd=2,
main="Sensitivity curve for Excess Kurtosis",
ylab="sensitivity")
set.seed(341)
pop <- rt(1000, 10)
y <- seq(-10, 10, length.out=1001)
sc <- function(y.pop, y, attr, ...) {
N <- length(y.pop) + 1
# For every value in the vector y, run this function
sapply(y, function(y.new) {
N * (attr(c(y.new, y.pop), ...) - attr(y.pop, ...))
})
}
sdn <- function(y.pop) {
N = length(y.pop)
sqrt( var(y.pop) * (N-1) / N )
}
excess.kurtosis <- function(y.pop) {
N = length(y.pop)
y.bar = mean(y.pop)
sigma = sdn(y.pop)
(1/N)*(sum((y.pop-y.bar)^4)) / (sigma^4) - 3
}
plot(y, sc(pop, y, kurtosis(method="excess")), type="l", lwd=2,
main="Sensitivity curve for Excess Kurtosis",
ylab="sensitivity")
library(e1071)
install.packages(e1071)
install.packages("e1071")
library(e1071)
set.seed(341)
pop <- rt(1000, 10)
y <- seq(-10, 10, length.out=1001)
sc <- function(y.pop, y, attr, ...) {
N <- length(y.pop) + 1
# For every value in the vector y, run this function
sapply(y, function(y.new) {
N * (attr(c(y.new, y.pop), ...) - attr(y.pop, ...))
})
}
sdn <- function(y.pop) {
N = length(y.pop)
sqrt( var(y.pop) * (N-1) / N )
}
excess.kurtosis <- function(y.pop) {
N = length(y.pop)
y.bar = mean(y.pop)
sigma = sdn(y.pop)
(1/N)*(sum((y.pop-y.bar)^4)) / (sigma^4) - 3
}
plot(y, sc(pop, y, kurtosis(method="excess")), type="l", lwd=2,
main="Sensitivity curve for Excess Kurtosis",
ylab="sensitivity")
library(e1071)
set.seed(341)
pop <- rt(1000, 10)
y <- seq(-10, 10, length.out=1001)
sc <- function(y.pop, y, attr, ...) {
N <- length(y.pop) + 1
# For every value in the vector y, run this function
sapply(y, function(y.new) {
N * (attr(c(y.new, y.pop), ...) - attr(y.pop, ...))
})
}
sdn <- function(y.pop) {
N = length(y.pop)
sqrt( var(y.pop) * (N-1) / N )
}
excess.kurtosis <- function(y.pop) {
N = length(y.pop)
y.bar = mean(y.pop)
sigma = sdn(y.pop)
(1/N)*(sum((y.pop-y.bar)^4)) / (sigma^4) - 3
}
plot(y, sc(pop, y, kurtosis), type="l", lwd=2,
main="Sensitivity curve for Excess Kurtosis",
ylab="sensitivity")
library(e1071)
set.seed(341)
pop <- rt(1000, 10)
y <- seq(-10, 10, length.out=1001)
sc <- function(y.pop, y, attr, ...) {
N <- length(y.pop) + 1
# For every value in the vector y, run this function
sapply(y, function(y.new) {
N * (attr(c(y.new, y.pop), ...) - attr(y.pop, ...))
})
}
sdn <- function(y.pop) {
N = length(y.pop)
sqrt( var(y.pop) * (N-1) / N )
}
excess.kurtosis <- function(y.pop) {
N = length(y.pop)
y.bar = mean(y.pop)
sigma = sdn(y.pop)
(1/N)*(sum((y.pop-y.bar)^4)) / (sigma^4) - 3
}
plot(y, sc(pop, y, excess.kurtosis), type="l", lwd=2,
main="Sensitivity curve for Excess Kurtosis",
ylab="sensitivity")
library(e1071)
set.seed(341)
pop <- rt(1000, 10)
y <- seq(-10, 10, length.out=1001)
sc <- function(y.pop, y, attr, ...) {
N <- length(y.pop) + 1
# For every value in the vector y, run this function
sapply(y, function(y.new) {
N * (attr(c(y.new, y.pop), ...) - attr(y.pop, ...))
})
}
plot(y, sc(pop, y, kurtosis), type="l", lwd=2,
main="Sensitivity curve for Excess Kurtosis",
ylab="sensitivity")
filename <- paste("iris.csv")
iris <- read.csv(filename, header=TRUE)
filename <- paste("data/iris.csv", sep="/")
iris <- read.csv(filename, header=TRUE)
summary(iris)
filename <- paste("data/iris.csv", sep="/")
iris <- read.csv(filename, header=TRUE)
nrow(iris)
ncol(iris)
filename <- paste("data/iris.csv", sep="/")
iris <- read.csv(filename, header=TRUE)
print("Rows: ",nrow(iris))
filename <- paste("data/iris.csv", sep="/")
iris <- read.csv(filename, header=TRUE)
cat("Rows: ",nrow(iris))
ncol(iris)
filename <- paste("data/iris.csv", sep="/")
iris <- read.csv(filename, header=TRUE)
cat("Rows: ", nrow(iris))
cat("Cols: ", ncol(iris))
filename <- paste("data/iris.csv", sep="/")
iris <- read.csv(filename, header=TRUE)
cat("Rows: ", nrow(iris), "\n")
cat("Cols: ", ncol(iris))
install.packages(knitr)
summary(iris)
head(iris)
install.packages(janitor)
library(janitor)
iris.freq = table(iris)
iris.freq = table(iris)
iris.freq
iris.freq <- table(iris$Species)
iris.freq
iris.freq <- table(iris$Species)
kable(iris.freq, "pipe")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
iris.freq <- table(iris$Species)
kable(iris.freq, "pipe")
