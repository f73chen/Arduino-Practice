|multiplier
SW[0] => disp1[0].IN0
SW[0] => and0[2].IN0
SW[0] => and0[1].IN0
SW[0] => and0[0].IN0
SW[0] => seven_segment:hex2_inst.data_in[0]
SW[1] => and1[3].IN0
SW[1] => and1[2].IN0
SW[1] => and1[1].IN0
SW[1] => and1[0].IN0
SW[1] => seven_segment:hex2_inst.data_in[1]
SW[2] => and2[3].IN0
SW[2] => and2[2].IN0
SW[2] => and2[1].IN0
SW[2] => and2[0].IN0
SW[2] => seven_segment:hex2_inst.data_in[2]
SW[3] => and3[3].IN0
SW[3] => and3[2].IN0
SW[3] => and3[1].IN0
SW[3] => and3[0].IN0
SW[3] => seven_segment:hex2_inst.data_in[3]
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => disp1[0].IN1
SW[6] => and1[0].IN1
SW[6] => and2[0].IN1
SW[6] => and3[0].IN1
SW[6] => seven_segment:hex3_inst.data_in[0]
SW[7] => and0[0].IN1
SW[7] => and1[1].IN1
SW[7] => and2[1].IN1
SW[7] => and3[1].IN1
SW[7] => seven_segment:hex3_inst.data_in[1]
SW[8] => and0[1].IN1
SW[8] => and1[2].IN1
SW[8] => and2[2].IN1
SW[8] => and3[2].IN1
SW[8] => seven_segment:hex3_inst.data_in[2]
SW[9] => and0[2].IN1
SW[9] => and1[3].IN1
SW[9] => and2[3].IN1
SW[9] => and3[3].IN1
SW[9] => seven_segment:hex3_inst.data_in[3]
LEDG[0] << disp1[0].DB_MAX_OUTPUT_PORT_TYPE
LEDG[1] << four_bit:adder1.c[0]
LEDG[2] << four_bit:adder2.c[0]
LEDG[3] << four_bit:adder3.c[0]
LEDG[4] << four_bit:adder3.c[1]
LEDG[5] << four_bit:adder3.c[2]
LEDG[6] << four_bit:adder3.c[3]
LEDG[7] << four_bit:adder3.c[4]
hex3[0] << seven_segment:hex3_inst.segments_out[0]
hex3[1] << seven_segment:hex3_inst.segments_out[1]
hex3[2] << seven_segment:hex3_inst.segments_out[2]
hex3[3] << seven_segment:hex3_inst.segments_out[3]
hex3[4] << seven_segment:hex3_inst.segments_out[4]
hex3[5] << seven_segment:hex3_inst.segments_out[5]
hex3[6] << seven_segment:hex3_inst.segments_out[6]
hex2[0] << seven_segment:hex2_inst.segments_out[0]
hex2[1] << seven_segment:hex2_inst.segments_out[1]
hex2[2] << seven_segment:hex2_inst.segments_out[2]
hex2[3] << seven_segment:hex2_inst.segments_out[3]
hex2[4] << seven_segment:hex2_inst.segments_out[4]
hex2[5] << seven_segment:hex2_inst.segments_out[5]
hex2[6] << seven_segment:hex2_inst.segments_out[6]
hex1[0] << seven_segment:hex1_inst.segments_out[0]
hex1[1] << seven_segment:hex1_inst.segments_out[1]
hex1[2] << seven_segment:hex1_inst.segments_out[2]
hex1[3] << seven_segment:hex1_inst.segments_out[3]
hex1[4] << seven_segment:hex1_inst.segments_out[4]
hex1[5] << seven_segment:hex1_inst.segments_out[5]
hex1[6] << seven_segment:hex1_inst.segments_out[6]
hex0[0] << seven_segment:hex0_inst.segments_out[0]
hex0[1] << seven_segment:hex0_inst.segments_out[1]
hex0[2] << seven_segment:hex0_inst.segments_out[2]
hex0[3] << seven_segment:hex0_inst.segments_out[3]
hex0[4] << seven_segment:hex0_inst.segments_out[4]
hex0[5] << seven_segment:hex0_inst.segments_out[5]
hex0[6] << seven_segment:hex0_inst.segments_out[6]


|multiplier|four_bit:adder1
a[0] => Add0.IN4
a[1] => Add0.IN3
a[2] => Add0.IN2
a[3] => Add0.IN1
b[0] => Add0.IN8
b[1] => Add0.IN7
b[2] => Add0.IN6
b[3] => Add0.IN5
c[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
c[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
c[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
c[3] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
c[4] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|multiplier|four_bit:adder2
a[0] => Add0.IN4
a[1] => Add0.IN3
a[2] => Add0.IN2
a[3] => Add0.IN1
b[0] => Add0.IN8
b[1] => Add0.IN7
b[2] => Add0.IN6
b[3] => Add0.IN5
c[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
c[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
c[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
c[3] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
c[4] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|multiplier|four_bit:adder3
a[0] => Add0.IN4
a[1] => Add0.IN3
a[2] => Add0.IN2
a[3] => Add0.IN1
b[0] => Add0.IN8
b[1] => Add0.IN7
b[2] => Add0.IN6
b[3] => Add0.IN5
c[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
c[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
c[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
c[3] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
c[4] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|multiplier|seven_segment:hex3_inst
data_in[0] => Mux0.IN35
data_in[0] => Mux1.IN35
data_in[0] => Mux2.IN35
data_in[0] => Mux3.IN35
data_in[0] => Mux4.IN35
data_in[0] => Mux5.IN35
data_in[0] => Mux6.IN35
data_in[1] => Mux0.IN34
data_in[1] => Mux1.IN34
data_in[1] => Mux2.IN34
data_in[1] => Mux3.IN34
data_in[1] => Mux4.IN34
data_in[1] => Mux5.IN34
data_in[1] => Mux6.IN34
data_in[2] => Mux0.IN33
data_in[2] => Mux1.IN33
data_in[2] => Mux2.IN33
data_in[2] => Mux3.IN33
data_in[2] => Mux4.IN33
data_in[2] => Mux5.IN33
data_in[2] => Mux6.IN33
data_in[3] => Mux0.IN32
data_in[3] => Mux1.IN32
data_in[3] => Mux2.IN32
data_in[3] => Mux3.IN32
data_in[3] => Mux4.IN32
data_in[3] => Mux5.IN32
data_in[3] => Mux6.IN32
blanking => Mux0.IN36
blanking => Mux1.IN36
blanking => Mux2.IN36
blanking => Mux3.IN36
blanking => Mux4.IN36
blanking => Mux5.IN36
blanking => Mux6.IN36
segments_out[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|multiplier|seven_segment:hex2_inst
data_in[0] => Mux0.IN35
data_in[0] => Mux1.IN35
data_in[0] => Mux2.IN35
data_in[0] => Mux3.IN35
data_in[0] => Mux4.IN35
data_in[0] => Mux5.IN35
data_in[0] => Mux6.IN35
data_in[1] => Mux0.IN34
data_in[1] => Mux1.IN34
data_in[1] => Mux2.IN34
data_in[1] => Mux3.IN34
data_in[1] => Mux4.IN34
data_in[1] => Mux5.IN34
data_in[1] => Mux6.IN34
data_in[2] => Mux0.IN33
data_in[2] => Mux1.IN33
data_in[2] => Mux2.IN33
data_in[2] => Mux3.IN33
data_in[2] => Mux4.IN33
data_in[2] => Mux5.IN33
data_in[2] => Mux6.IN33
data_in[3] => Mux0.IN32
data_in[3] => Mux1.IN32
data_in[3] => Mux2.IN32
data_in[3] => Mux3.IN32
data_in[3] => Mux4.IN32
data_in[3] => Mux5.IN32
data_in[3] => Mux6.IN32
blanking => Mux0.IN36
blanking => Mux1.IN36
blanking => Mux2.IN36
blanking => Mux3.IN36
blanking => Mux4.IN36
blanking => Mux5.IN36
blanking => Mux6.IN36
segments_out[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|multiplier|seven_segment:hex1_inst
data_in[0] => Mux0.IN35
data_in[0] => Mux1.IN35
data_in[0] => Mux2.IN35
data_in[0] => Mux3.IN35
data_in[0] => Mux4.IN35
data_in[0] => Mux5.IN35
data_in[0] => Mux6.IN35
data_in[1] => Mux0.IN34
data_in[1] => Mux1.IN34
data_in[1] => Mux2.IN34
data_in[1] => Mux3.IN34
data_in[1] => Mux4.IN34
data_in[1] => Mux5.IN34
data_in[1] => Mux6.IN34
data_in[2] => Mux0.IN33
data_in[2] => Mux1.IN33
data_in[2] => Mux2.IN33
data_in[2] => Mux3.IN33
data_in[2] => Mux4.IN33
data_in[2] => Mux5.IN33
data_in[2] => Mux6.IN33
data_in[3] => Mux0.IN32
data_in[3] => Mux1.IN32
data_in[3] => Mux2.IN32
data_in[3] => Mux3.IN32
data_in[3] => Mux4.IN32
data_in[3] => Mux5.IN32
data_in[3] => Mux6.IN32
blanking => Mux0.IN36
blanking => Mux1.IN36
blanking => Mux2.IN36
blanking => Mux3.IN36
blanking => Mux4.IN36
blanking => Mux5.IN36
blanking => Mux6.IN36
segments_out[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|multiplier|seven_segment:hex0_inst
data_in[0] => Mux0.IN35
data_in[0] => Mux1.IN35
data_in[0] => Mux2.IN35
data_in[0] => Mux3.IN35
data_in[0] => Mux4.IN35
data_in[0] => Mux5.IN35
data_in[0] => Mux6.IN35
data_in[1] => Mux0.IN34
data_in[1] => Mux1.IN34
data_in[1] => Mux2.IN34
data_in[1] => Mux3.IN34
data_in[1] => Mux4.IN34
data_in[1] => Mux5.IN34
data_in[1] => Mux6.IN34
data_in[2] => Mux0.IN33
data_in[2] => Mux1.IN33
data_in[2] => Mux2.IN33
data_in[2] => Mux3.IN33
data_in[2] => Mux4.IN33
data_in[2] => Mux5.IN33
data_in[2] => Mux6.IN33
data_in[3] => Mux0.IN32
data_in[3] => Mux1.IN32
data_in[3] => Mux2.IN32
data_in[3] => Mux3.IN32
data_in[3] => Mux4.IN32
data_in[3] => Mux5.IN32
data_in[3] => Mux6.IN32
blanking => Mux0.IN36
blanking => Mux1.IN36
blanking => Mux2.IN36
blanking => Mux3.IN36
blanking => Mux4.IN36
blanking => Mux5.IN36
blanking => Mux6.IN36
segments_out[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


