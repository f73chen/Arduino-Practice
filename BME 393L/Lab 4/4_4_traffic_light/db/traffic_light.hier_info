|traffic_light
CLOCK_50_B5B => EWR.CLK
CLOCK_50_B5B => EWG.CLK
CLOCK_50_B5B => NSR.CLK
CLOCK_50_B5B => NSG.CLK
CLOCK_50_B5B => state_counter[0].CLK
CLOCK_50_B5B => state_counter[1].CLK
CLOCK_50_B5B => state_counter[2].CLK
CLOCK_50_B5B => state_counter[3].CLK
CLOCK_50_B5B => hz1.CLK
CLOCK_50_B5B => counter2[0].CLK
CLOCK_50_B5B => counter2[1].CLK
CLOCK_50_B5B => counter2[2].CLK
CLOCK_50_B5B => counter2[3].CLK
CLOCK_50_B5B => counter2[4].CLK
CLOCK_50_B5B => counter2[5].CLK
CLOCK_50_B5B => counter2[6].CLK
CLOCK_50_B5B => counter2[7].CLK
CLOCK_50_B5B => counter2[8].CLK
CLOCK_50_B5B => counter2[9].CLK
CLOCK_50_B5B => counter2[10].CLK
CLOCK_50_B5B => counter2[11].CLK
CLOCK_50_B5B => counter2[12].CLK
CLOCK_50_B5B => counter2[13].CLK
CLOCK_50_B5B => counter2[14].CLK
CLOCK_50_B5B => counter2[15].CLK
CLOCK_50_B5B => counter2[16].CLK
CLOCK_50_B5B => counter2[17].CLK
CLOCK_50_B5B => counter2[18].CLK
CLOCK_50_B5B => counter2[19].CLK
CLOCK_50_B5B => counter2[20].CLK
CLOCK_50_B5B => counter2[21].CLK
CLOCK_50_B5B => counter2[22].CLK
CLOCK_50_B5B => counter2[23].CLK
CLOCK_50_B5B => counter2[24].CLK
CLOCK_50_B5B => hz10.CLK
CLOCK_50_B5B => counter[0].CLK
CLOCK_50_B5B => counter[1].CLK
CLOCK_50_B5B => counter[2].CLK
CLOCK_50_B5B => counter[3].CLK
CLOCK_50_B5B => counter[4].CLK
CLOCK_50_B5B => counter[5].CLK
CLOCK_50_B5B => counter[6].CLK
CLOCK_50_B5B => counter[7].CLK
CLOCK_50_B5B => counter[8].CLK
CLOCK_50_B5B => counter[9].CLK
CLOCK_50_B5B => counter[10].CLK
CLOCK_50_B5B => counter[11].CLK
CLOCK_50_B5B => counter[12].CLK
CLOCK_50_B5B => counter[13].CLK
CLOCK_50_B5B => counter[14].CLK
CLOCK_50_B5B => counter[15].CLK
CLOCK_50_B5B => counter[16].CLK
CLOCK_50_B5B => counter[17].CLK
CLOCK_50_B5B => counter[18].CLK
CLOCK_50_B5B => counter[19].CLK
CLOCK_50_B5B => counter[20].CLK
CLOCK_50_B5B => counter[21].CLK
CLOCK_50_B5B => counter[22].CLK
CLOCK_50_B5B => counter[23].CLK
CLOCK_50_B5B => counter[24].CLK
CLOCK_50_B5B => state~1.DATAIN
LEDG[0] <= <GND>
LEDG[1] <= <GND>
LEDG[2] <= <GND>
LEDG[3] <= <GND>
LEDG[4] <= EWG.DB_MAX_OUTPUT_PORT_TYPE
LEDG[5] <= <GND>
LEDG[6] <= <GND>
LEDG[7] <= NSG.DB_MAX_OUTPUT_PORT_TYPE
LEDG[8] <= <GND>
LEDG[9] <= <GND>
LEDR[0] <= NSR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= <GND>
LEDR[2] <= <GND>
LEDR[3] <= <GND>
LEDR[4] <= EWR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] <= <GND>
LEDR[6] <= <GND>
LEDR[7] <= <GND>
LEDR[8] <= <GND>
LEDR[9] <= <GND>
hex3[0] <= seven_segment:hex3_inst.segments_out[0]
hex3[1] <= seven_segment:hex3_inst.segments_out[1]
hex3[2] <= seven_segment:hex3_inst.segments_out[2]
hex3[3] <= seven_segment:hex3_inst.segments_out[3]
hex3[4] <= seven_segment:hex3_inst.segments_out[4]
hex3[5] <= seven_segment:hex3_inst.segments_out[5]
hex3[6] <= seven_segment:hex3_inst.segments_out[6]
hex0[0] <= seven_segment:hex0_inst.segments_out[0]
hex0[1] <= seven_segment:hex0_inst.segments_out[1]
hex0[2] <= seven_segment:hex0_inst.segments_out[2]
hex0[3] <= seven_segment:hex0_inst.segments_out[3]
hex0[4] <= seven_segment:hex0_inst.segments_out[4]
hex0[5] <= seven_segment:hex0_inst.segments_out[5]
hex0[6] <= seven_segment:hex0_inst.segments_out[6]


|traffic_light|seven_segment:hex3_inst
data_in[0] => Mux0.IN35
data_in[0] => Mux1.IN35
data_in[0] => Mux2.IN35
data_in[0] => Mux3.IN35
data_in[0] => Mux4.IN35
data_in[0] => Mux5.IN35
data_in[0] => Mux6.IN35
data_in[1] => Mux0.IN34
data_in[1] => Mux1.IN34
data_in[1] => Mux2.IN34
data_in[1] => Mux3.IN34
data_in[1] => Mux4.IN34
data_in[1] => Mux5.IN34
data_in[1] => Mux6.IN34
data_in[2] => Mux0.IN33
data_in[2] => Mux1.IN33
data_in[2] => Mux2.IN33
data_in[2] => Mux3.IN33
data_in[2] => Mux4.IN33
data_in[2] => Mux5.IN33
data_in[2] => Mux6.IN33
data_in[3] => Mux0.IN32
data_in[3] => Mux1.IN32
data_in[3] => Mux2.IN32
data_in[3] => Mux3.IN32
data_in[3] => Mux4.IN32
data_in[3] => Mux5.IN32
data_in[3] => Mux6.IN32
blanking => Mux0.IN36
blanking => Mux1.IN36
blanking => Mux2.IN36
blanking => Mux3.IN36
blanking => Mux4.IN36
blanking => Mux5.IN36
blanking => Mux6.IN36
segments_out[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|traffic_light|seven_segment:hex0_inst
data_in[0] => Mux0.IN35
data_in[0] => Mux1.IN35
data_in[0] => Mux2.IN35
data_in[0] => Mux3.IN35
data_in[0] => Mux4.IN35
data_in[0] => Mux5.IN35
data_in[0] => Mux6.IN35
data_in[1] => Mux0.IN34
data_in[1] => Mux1.IN34
data_in[1] => Mux2.IN34
data_in[1] => Mux3.IN34
data_in[1] => Mux4.IN34
data_in[1] => Mux5.IN34
data_in[1] => Mux6.IN34
data_in[2] => Mux0.IN33
data_in[2] => Mux1.IN33
data_in[2] => Mux2.IN33
data_in[2] => Mux3.IN33
data_in[2] => Mux4.IN33
data_in[2] => Mux5.IN33
data_in[2] => Mux6.IN33
data_in[3] => Mux0.IN32
data_in[3] => Mux1.IN32
data_in[3] => Mux2.IN32
data_in[3] => Mux3.IN32
data_in[3] => Mux4.IN32
data_in[3] => Mux5.IN32
data_in[3] => Mux6.IN32
blanking => Mux0.IN36
blanking => Mux1.IN36
blanking => Mux2.IN36
blanking => Mux3.IN36
blanking => Mux4.IN36
blanking => Mux5.IN36
blanking => Mux6.IN36
segments_out[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


